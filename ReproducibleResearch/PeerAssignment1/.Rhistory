sqrt(.6)
sqrt(.68)
.7745/sqrt(10)
sp <- sqrt((9 * .6 + 9 * .68)/18)
sp
-2+c(-1,1)qt(.975,18)*sp*sqrt(.2)
-2+c(-1,1)*qt(.975,18)*sp*sqrt(.2)
sp <- sqrt((99 * sqrt(.5) + 99 * sqrt(2))/198)
sp
2+c(-1,1)*qt(.975,198)*sp*sqrt(.02)
-2+c(-1,1)*qt(.975,18)*sp*sqrt(.2)
sp <- sqrt((99 * .25 + 99 * 4/198)
)
sp <- sqrt((99 * .25 + 99 * 4/198))
sp
2+c(-1,1)*qt(.975,198)*sp*sqrt(.02)
sp -> sqrt((8*1.5*1.5+8*1.8*1.8)/16)
sp -> sqrt((8*1.5*1.5+8*1.8*1.8)/16)
sp <- sqrt((8*1.5*1.5+8*1.8*1.8)/16)
sp
-3+c(-1,1)*qt(.975,16)*sp*sqrt(2/9)
-3+c(-1,1)*qt(.95,16)*sp*sqrt(2/9)
-4+c(-1,1)*qt(.95,16)*sp*sqrt(2/9)
setwd("c:\Users\shanthiviswanathan\datasciencecoursera\ReproducibleResearch\PeerAssignment1")
setwd("\Users\shanthiviswanathan\datasciencecoursera\ReproducibleResearch\PeerAssignment1")
setwd("/Users\shanthiviswanathan\datasciencecoursera\ReproducibleResearch\PeerAssignment1")
setwd("/Users/shanthiviswanathan/datasciencecoursera/ReproducibleResearch/PeerAssignment1")
read.csv(file.path(getwd(), "activity.csv"))
nrows(dt)
dt <- data.table(dt)
dt <- read.csv(file.path(getwd(), "activity.csv"))
nrows(dt)
dt <- data.table(dt)
library(data.table)
dt <- data.table(dt)
nrows(dt)
nrow(dt)
dt <- dt[, date := as.Date(date)]
str(dt)
dtDaily <- dt[, list(sumSteps = sum(steps)), date]
head(dtDaily)
dtDaily <- dt[, sum(steps), date]
head(dtDaily)
dtDaily <- dt[, SumSteps=sum(steps), date]
dtDailySteps <- dt[, list(sumSteps = sum(steps)), date]
head(dtDailySteps)
ggplot(dtDailySteps, aes(x=sumSteps)) +
geom_histogram(alpha=1/2, binwidth=1000)
library(ggplot2)
ggplot(dtDailySteps, aes(x=sumSteps)) +
geom_histogram(alpha=1/2, binwidth=1000)
tab <- dtDailySteps[, list(n = .N, nValid = sum(!is.na(sumSteps)), mean = mean(sumSteps, na.rm=TRUE), median = median(sumSteps, na.rm=TRUE))]
tab
dtDailySteps[, list(n = .N, nValid = sum(!is.na(sumSteps)), mean = mean(sumSteps, na.rm=TRUE), median = median(sumSteps, na.rm=TRUE))]
sumSteps
dtDailySteps
dtDailySteps(,mean(sumSteps))
mean(dtDailySteps)
mean(dtDailySteps(,sumSteps))
mean(dtDailySteps[],sumSteps])
mean(dtDailySteps[,sumSteps])
mean(dtDailySteps[,sumSteps],na.rm=TRUE)
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
Read the CSV file.
Convert the data frame to a data table using the [`data.table`]
Convert the "date" variable to a "date class".
```{r}
library(data.table)
dt <- read.csv(file.path(getwd(), "activity.csv"))
dt <- data.table(dt)
dt <- dt[, date := as.Date(date)]
```
## What is mean total number of steps taken per day?
Aggregate the number of steps taken each day.
Days with missing values (`NA`) will have `NA` when aggregated.
```{r aggregateDailyStepsEachDay}
dtDailySteps <- dt[, list(sumSteps = sum(steps)), date]
head(dtDailySteps)
```
Plot a histogram of the total number of steps taken each day.
```{r histogramStepsTakenEachDay}
library(ggplot2)
ggplot(dtDailySteps, aes(x=sumSteps)) +
geom_histogram(alpha=1/2, binwidth=1000)
```
Calculate the mean and median total number of steps taken per day **before imputing**.
```{r, results='asis'}
library(xtable)
tab <- dtDailySteps[, list(n = .N, nValid = sum(!is.na(sumSteps)), mean = mean(sumSteps, na.rm=TRUE), median = median(sumSteps, na.rm=TRUE))]
print(xtable(tab), type="html", include.rownames=FALSE)
```
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
library(knitr)
package("knitr")
require("knitr")
require("knitR")
require("knitR")
install.packages("knitr")
library(knitr)
dtIntervals <- dt[, list(meanSteps = mean(steps, na.rm=TRUE)), interval]
dtIntervals
ggplot(dtIntervals, aes(x=interval, y=meanSteps)) +
geom_line()
dtIntervals[,max(meanSteps)]
dtIntervals[interval,max(meanSteps)]
plot(x=dtIntervals$interval,y=deIntervals$meanSteps,type='l')
plot(x=dtIntervals$interval,y=dtIntervals$meanSteps,type='l')
ggplot(dtIntervals, aes(x=interval, y=meanSteps)) +
geom_line()
maxint <- dtIntervals[which(dtIntervals$meanSteps==max(dtIntervals$meanSteps))]
maxInt
maxint -> dtIntervals[which(dtIntervals$meanSteps==max(dtIntervals$meanSteps))]
maxInt
maxint <- dtIntervals[which(dtIntervals$meanSteps==max(dtIntervals$meanSteps)),]$interval
maxInt
dtIntervals[which(dtIntervals$meanSteps==max(dtIntervals$meanSteps)),]$interval
maxint <- dtIntervals[which(dtIntervals$meanSteps==max(dtIntervals$meanSteps)),]$interval
maxInt
maxint
dt <- dt[, isStepsMissing := is.na(steps)]
tab <- dt[, .N, isStepsMissing]
print(xtable(tab), type="html",
)
tab
missrows <- sum(is.na(dt))
missrows
ggplot(dtDailySteps, aes(x=sumSteps)) +
geom_histogram(alpha=1/2, binwidth=1000)
newdt <- dt
toreplace <- is.na(newdt)
for (i in 1:dim(toreplace)[1]) {
if (toreplace==TRUE) {
newdt$steps[which(toreplace)] <- dtIntervals$meanSteps[which(dtIntervals$interval==newdt$interval[which(toreplace)])]
}
}
newdt
newdt
newdt <- dt
newdt
dt <- read.csv(file.path(getwd(), "activity.csv"))
dt <- data.table(dt)
dt
dt <- dt[, date := as.Date(date)]
dt
str(dt)
newdt <- dt
toreplace <- is.na(newdt)
for (i in 1:dim(toreplace)[1]) {
if (toreplace==TRUE) {
newdt$steps[which(toreplace)] <- dtIntervals$meanSteps[which(dtIntervals$interval==newdt$interval[which(toreplace)])]
}
}
warnings()
newdt
dt
dt[,sum(steps),date]
dt[,mean(steps),date]
dt[,list(sunSteps=sum(steps)),date]
dt[,list(sumSteps=sum(steps)),date]
dt[,list(sumSteps=sum(steps)),date,na.rm=TRUE]
dt[,list(sumSteps=sum(steps,na.rm=TRUE)),date]
dt[,list(meanSteps=mean(steps,na.rm=TRUE), medianSteps=median(steps,na.rm=TREU)),date]
dt[,list(meanSteps=mean(steps,na.rm=TRUE), medianSteps=median(steps,na.rm=TRUE)),date]
mean(dt[,steps,date])
stepdat <- dt
stepsperday <- aggregate(stepdat$steps,by=stepdat$date),FUN=sum,na.rm=TRUE)
stepsperday <- aggregate(stepdat$steps,by=stepdat$date,FUN=sum,na.rm=TRUE)
stepsperday <- aggregate(stepdat$steps,by=list(stepdat$date),FUN=sum,na.rm=TRUE)
stepsperday
stepsperday <- aggregate(stepdat$steps,by=list(stepdat$date),FUN=mean,na.rm=TRUE)
stepsperday
dtDailySteps[, list(mean = mean(sumSteps, na.rm=TRUE), median = median(sumSteps, na.rm=TRUE)),date]
dtDailySteps[, list(mean = mean(sumSteps, na.rm=TRUE), median = median(sumSteps, na.rm=TRUE))]
head(dt)
head(dtIntervals)
dt
dt[,interval=0]
dt[,interval==0]
1.645*.4+12
12-1.645*4
12-1.645*.4
mean(c(140,138,150,148,135))
mean(c(132,135,151,146,130))
142.2-138.8
a <- c(140,138,150,148,135)
b <- c(132,135,151,146,130)
t.test(a,b,paired=TRUE)
t.test(a,b,paired=TRUE)
pbinom(2,size=4,prob=.5,lower.tail=FALSE)
pbinom(3,size=4,prob=.5,lower.tail=FALSE)
pbinom(4,size=4,prob=.5,lower.tail=FALSE)
pbinom(4,size=4,prob=.5,lower.tail=FALSE)
ppois(9,17.87,lower.tail=FALSE)
23/1.645
power.t.test(100,delta=.01,sd=0.04,type="one.sample",alt="one.sided")$power
power.t.test(100,delta=.01,sd=0.04,type="one.sample",alt="one.sided")$n
power.t.test(power=.9,delta=.01,sd=0.04,type="one.sample",alt="one.sided")$n
